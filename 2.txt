version: "3.8"

#NETWORK
networks:
  my-network:
    driver: bridge
#SERVICES
services: 
  mysqldb:
    container_name: mysqldb
    image: mysql:8.0.29
    hostname: mysqldb
    restart: always
    environment:
      - MYSQL_DATABASE=hdshopdb
      - MYSQL_ROOT_PASSWORD=123456
    networks: 
      - my-network
    ports:
      - 3307:3306
    volumes:
      - ./db:/var/lib/mysql
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=123456 --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 10s
      retries: 100

  api_service:
    depends_on:
      mysqldb:
        condition: service_healthy
    container_name: beshop
    networks: 
      - my-network
    build: 
      dockerfile: Dockerfile
      context: ./beshop/
    hostname: beshop-springboot
    restart: always
    ports:
      - 9090:8080
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:mysql://mysqldb:3306/hdshopdb?useSSL=false&allowPublicKeyRetrieval=true",
        "spring.datasource.username" : "root",
        "spring.datasource.password" : "123456",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.MySQL8Dialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'

  reactjs:
    depends_on:
      - api_service
    container_name: reactjs
    networks: 
      - my-network
    build:
      dockerfile: Dockerfile
      context: ./feshop/
    hostname: fe
    restart: always
    stdin_open: true
    tty: true
    ports:
      - 3000:3000


